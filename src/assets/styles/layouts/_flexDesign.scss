/**
 * CONTENTS
 *
 * BREAKPOINTS
 * Breakpoints............... Breakpoint Variables for Responsive Design.
 *
 * TOOLS
 * Mixins...............Useful mixins.
 *
 * COMPONENTS
 * Container............The main page header.
 *
 *
 * GLOBAL COMMENTS
 *
 * 1. Mixin receiving a breakpoint to dynamically create media queries.
 * 2. Mixin para crear la clase col__ , recibe como parámetros el modificador,
 *    número de columnas y los puntos de ruptura
 * 3. Mixin to show / hide an element below or above a certain break point.
 * 4. This is the outermost element of the grid, it will contain row elements
 * 5. The container fluid will always have a width of 100% which will allow 
 *     the components to be added as a column
 * 6. The row container will add the content horizontally (rows). Flex-wrap 
 *     is used to place the children of a row, making them wrap so they don't 
 *     overflow and give them 100% width inside the row
 * 7. Elements col__ are displayed flex and column. 
 *
 * Bliography
 * The responsive design code is a variation of the code proposed by Juan 
 * Varela in his post about Flexbox and Sass Grid Tutorial, available at:
 * https://www.toptal.com/sass/css3-flexbox-sass-grid-tutorial
 */

/* ------------------------------------*\
  #MIXINS
\*------------------------------------ */

@mixin create-mq($breakpoint, $min-or-max) {/* [1] */
  @if ($breakpoint == 0) {
    @content;
  }
  
  @else {
    @media screen and (#{$min-or-max}-width: $breakpoint * 1px) {
      @content;
    }
  }
}
  
@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {/* [2] */
  @include create-mq($breakpoint, 'min') {
    &__col#{$modifier}-offset-0 {
      margin-left: 0;
    }
    
    @for $i from 1 through $grid-cols {
      &__col#{$modifier}-#{$i} {
        flex-basis: (100 / ($grid-cols / $i) ) * 1%;
      }
      &__col#{$modifier}-offset-#{$i} {
        margin-left: (100 / ($grid-cols / $i) ) * 1%;
      }
    }
  }
}

@each $modifier , $breakpoint in $map-grid-props {/* [3] */
  @if ($modifier == '') {
    $modifier: '-xs';
  }
  
  @include create-mq ($breakpoint - 1, 'max') {
    .hidden#{$modifier}-down {
      display: none !important;
    }
  }
  
  @include create-mq ($breakpoint, 'min') {
    .hidden#{$modifier}-up {
      display: none !important;
    }
  }
}
  
/* ------------------------------------*\
  #CONTAINER
\*------------------------------------ */
 
.container {  /* [4] */
  max-width: 92%;
  margin: 0 auto;

  &--fluid { /* [5] */
    margin: 0;
    max-width: 100%;
  }
  
  &__row { /* [6] */
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    flex-shrink: 3;
    justify-content: center;
  }
  
  @each $modifier , $breakpoint in $map-grid-props {
    @include create-col-classes($modifier, $grid__cols, $breakpoint);
  }
}

.col__flex--column { /* [7] */
  display: flex;
  flex-direction: column;
  align-self: center;
}
